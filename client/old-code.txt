old code

!!! app.jsx

import React from 'react';
import Home from './pages/home';
import NotFound from './pages/not-found';

import parseRoute from './lib/parse-route';
import Header from './components/header';
import Signup from './pages/sign-up';
import Login from './pages/login';
import jwtDecode from 'jwt-decode';
import AppContext from './lib/app-context';

export default class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      user: null,
      isAuthorizing: true,
      route: parseRoute(window.location.hash)
    };
    this.handleSignIn = this.handleSignIn.bind(this);
    this.handleSignOut = this.handleSignOut.bind(this);
  }

  componentDidMount() {
    window.addEventListener('hashchange', () => {
      this.setState({
        route: parseRoute(window.location.hash)
      });
    });
    const token = window.localStorage.getItem('react-context-jwt');
    const user = token ? jwtDecode(token) : null;
    this.setState({ user, isAuthorizing: false });
  }

  handleSignIn(result) {
    const { user, token } = result;
    window.localStorage.setItem('react-context-jwt', token);
    this.setState({ user });
    console.log('bang-bang')
  }

  handleSignOut() {
    window.localStorage.removeItem('react-context-jwt');
    this.setState({ user: null });
    console.log('bang')
  }

  renderPage() {
    const { route } = this.state;
    if (route.path === '') {
      return <Home />;
    }
    if (route.path === 'users') {
      const userId = route.params.get('userId');
      return <UserDetails userId={userId} />;
    }
    if (route.path === 'sign-up') {
      return <Signup />;
    }
    if (route.path === 'login') {
      return <Login />;
    }
    if (route.path === 'sign-up' || route.path === 'login' ) {
      return <AuthForm />;
    }
    return <NotFound />;
  }

  renderPage() {
    const { route } = this.state;
    if (route.path === '') {
      return <Home />;
    }
    if (route.path === 'users') {
      const userId = route.params.get('userId');
      return <UserDetails userId={userId} />;
    }
    if (route.path === 'login' || route.path === 'sign-up') {
      return <Auth />;
    }
    return <NotFound />;
  }


  render() {
    return (
      <>
        <Header />
        {this.renderPage()}
      </>
    );
  }
}

  render() {
    if (this.state.isAuthorizing) return null;
    const { user, route } = this.state;
    const { handleSignIn, handleSignOut } = this;
    const contextValue = { user, route, handleSignIn, handleSignOut };
    return (
      <AppContext.Provider value={contextValue}>
        <>
          <Header />
          {/* <PageContainer> */}
            {this.renderPage()}
          {/* </PageContainer> */}
        </>
      </AppContext.Provider>
    );
  }
}


!!! headers.jsx

import React from 'react';
import AppContext from '../lib/app-context';

export default function Header(props) {
  return (
    <header className='mb-5 sticky-top'>
      <nav className="navbar navbar-dark bg-dark flex">
        <div className='container'>
          <div>
            <a href="#" className="navbar-brand">
              Nowww
            </a>
          </div>
          <div>
            <div className="dropdown">
              <button className="btn" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-list" viewBox="0 0 16 16">
                  <path fillRule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z" />
                </svg>
              </button>
              <ul className="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
                <li><a className="dropdown-item" href="#">My Nowww</a></li>
                <li><a className="dropdown-item" href="#">Nowww Pages</a></li>
                <li><a className="dropdown-item" href="#sign-up">Sign-up</a></li>
                <li><a className="dropdown-item" href="#login">Login</a></li>
                <li><a className="dropdown-item" href="#">Sign-out</a></li>
              </ul>
            </div>
          </div>
        </div>
      </nav>
    </header>
  );
}

export default class Header extends React.Component {
  render() {
    const { user, handleSignOut } = this.context;
    return (
      <header className='mb-5 sticky-top'>
        <nav className="navbar navbar-dark bg-dark flex">
          <div className='container'>
            <div>
              <a href="#" className="navbar-brand">
                Nowww
              </a>
            </div>
            <div>
              <div className="dropdown">
                <button className="btn" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-list" viewBox="0 0 16 16">
                    <path fillRule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z" />
                  </svg>
                </button>
                <ul className="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
                  <li><a className="dropdown-item" href="#">My Nowww</a></li>
                  <li><a className="dropdown-item" href="#">Nowww Pages</a></li>
                  <li><a className="dropdown-item" href="#sign-up">Sign-up</a></li>
                  <li><a className="dropdown-item" href="#login">Login</a></li>
                  <li><a className="dropdown-item" href="#" onClick={handleSignOut}>Sign-out</a></li>
                </ul>
              </div>
            </div>
          </div>
        </nav>
      </header>
    );
  }
}

Header.contextType = AppContext;
